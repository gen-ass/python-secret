#-------------------------------------------------------------------------------
# Name:        Secret Messages
# Purpose:     Create secret messages using images.
#
# Author:      Iain Forrest
#
# Created:     14/07/2015
# Copyright:   (c) Iain Forrest 2015
# Licence:     <your licence>
#-------------------------------------------------------------------------------
 
word_list = ["Afghanistan","Albania","Algeria","Andorra","Angola","Antigua  Deps","Argentina",
"Armenia","Australia","Austria","Azerbaijan","Bahamas","Bahrain","Bangladesh","Barbados",
"Belarus","Belgium","Belize","Benin","Bhutan","Bolivia","Bosnia Herzegovina","Botswana",
"Brazil","Brunei","Bulgaria","Burkina","Burundi","Cambodia","Cameroon","Canada","Cape Verde",
"Central African Rep","Chad","Chile","China","Colombia","Comoros","Congo","Congo","Costa Rica",
"Croatia","Cuba","Cyprus","Czech Republic","Denmark","Djibouti","Dominica","Dominican Republic",
"East Timor","Ecuador","Egypt","El Salvador","Equatorial Guinea","Eritrea","Estonia","Ethiopia",
"Fiji","Finland","France","Gabon","Gambia","Georgia","Germany","Ghana","Greece","Grenada","Guatemala",
"Guinea","Guinea-Bissau","Guyana","Haiti","Honduras","Hungary","Iceland","India","Indonesia",
"Iran","Iraq","Ireland","Israel","Italy","Ivory Coast","Jamaica","Japan","Jordan","Kazakhstan",
"Kenya","Kiribati","Korea North","Korea South","Kosovo","Kuwait","Kyrgyzstan","Laos","Latvia",
"Lebanon","Lesotho","Liberia","Libya","Liechtenstein","Lithuania","Luxembourg","Macedonia",
"Madagascar","Malawi","Malaysia","Maldives","Mali","Malta","Marshall Islands","Mauritania",
"Mauritius","Mexico","Micronesia","Moldova","Monaco","Mongolia","Montenegro","Morocco",
"Mozambique","Myanmar","Namibia","Nauru","Nepal","Netherlands","New Zealand","Nicaragua","Niger",
"Nigeria","Norway","Oman","Pakistan","Palau","Panama","Papua New Guinea","Paraguay","Peru",
"Philippines","Poland","Portugal","Qatar","Romania","Russian Federation","Rwanda","St Kitts  Nevis",
"St Lucia","Saint Vincent  the Grenadines","Samoa","San Marino","Sao Tome  Principe","Saudi Arabia",
"Senegal","Serbia","Seychelles","Sierra Leone","Singapore","Slovakia","Slovenia","Solomon Islands",
"Somalia","South Africa","South Sudan","Spain","Sri Lanka","Sudan","Suriname","Swaziland",
"Sweden","Switzerland","Syria","Taiwan","Tajikistan","Tanzania","Thailand","Togo","Tonga",
"Trinidad  Tobago","Tunisia","Turkey","Turkmenistan","Tuvalu","Uganda","Ukraine",
"United Arab Emirates","United Kingdom","United States","Uruguay","Uzbekistan","Vanuatu",
"Vatican City","Venezuela","Vietnam","Yemen","Zambia","Zimbabwe"]
 
 
 
 
import os, re, random, shutil
 
def convert_message(mess):
    letters = []
    for char in mess:
        if char not in [' ','.']:
            letters.append(ord(char) - 97)
        elif char == ' ':
            letters.append(27)
        else:
            letters.append(26)
    return letters
 
def create_message(letters, images):
    image_order = []
    for item in letters:
        image_order.append(images[item])
    return image_order
 
 
def make_message():
    img_loc = raw_input("Where are the base images located ie. 'C:\images' : ")
    message_loc = raw_input("Where do you want to save the message ie. 'C:\message' : ")
    images = os.listdir(img_loc)
    new_image_names = []
    message = "#"     #set message to a character that wont pass
    while not re.match("^[a-z .]*$", message) or len(message) > 195:  #keep asking for input until acceptable one is done
        message = raw_input("What message do you want to send? : ").lower()  #convert to lower case
        if not re.match("^[a-z .]*$", message) or len(message) > 195:
            message = raw_input("ERROR :  Only leters and ' ' and '.' accepted and max 195 characters. Please try again")
    new_image_names += sorted(random.sample(word_list,len(message)))
    no_message = convert_message(message)
    image_order = create_message(no_message,images)
    i= 0
    for image in image_order:
        shutil.copyfile(os.path.join(img_loc, image),os.path.join(message_loc, image))
        os.chdir(message_loc)
        new_image = str(random.randint(0,99)) + new_image_names[i] + ".jpg"
        os.rename(image,new_image)
        i += 1
 
def rename_files():
    location = raw_input("Where are the images located : ")
    files = os.listdir(unicode(location))
    os.chdir(location)
    for file_name in files:
        if file_name.endswith(".jpg"):
            os.rename(file_name, file_name.encode('utf-8').translate(None, "1234567890"))
 
 
def which_option():
    option = 3
    while option not in ['1','2']:
        option = raw_input("Do you want to 1. Create or 2. De-code? :")
        if option not in ['1','2']:
            option = raw_input("Please enter 1 or 2 - Do you want to 1. Create or 2. De-code? :")
    if option == '1':
        make_message()
    if option == '2':
        rename_files()
 
which_option()
